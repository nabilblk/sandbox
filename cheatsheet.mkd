# Branches

## Local

Local branches:

    # Delete.
    $ git -d BRANCHNAME

    # Rename.
    $ git -m CURRENT_NAME NEW_NAME

## Remote

Branches on a remote repo:

    # Like telling git to "push nothing to branch"
    $ git push origin :BRANCH_NAME

List remote branches:

    $ git branch -r

Operations on remote branches:

    $ git log origin/foo
    $ git diff origin/HEAD

## Stashes

Temporary branches that are not meant to be kept for long or distributed.

With a dirty working copy: 

    $ git stash
    # Stashes the current changes and checkouts the previous state
    # ...do something
    # retrieve the stashed changes and apply them to the working copy.
    $ git stash apply

# History

## Amend

    # Change last commit's message
    $ git commit --amend

You can add a file after committing and then

    $ git commit --amend

to merge that into the previous commit. You can use the `-a` flag to include
all of the pending changes in the previous commit.

## Rebase

To interactively edit the las 10 commits:

    $ git rebase -i HEAD~10

You can remove, edit the commit message, squash commits together, reorder
them, etc. Check `git help rebase` for instructions.

# Commits

Committing only certain changes:

    # Will ask you for each edit...
    $ git add -p

    # interactive, more complicated but more powerful
    $ git add -i

# The index

Differences between the working copy and the last commit:

    $ git diff

Differences between the index (staged changes) and the last commit:

    $ git diff --cached

# Maintenance

Removes untracked files and directories:

    $ git clean -f -d
